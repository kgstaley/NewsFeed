{"version":3,"sources":["../app/server.js"],"names":["express","require","json","urlencoded","cookieParser","config","helmet","routes","Responses","app","createError","cors","http","Server","io","module","exports","debugRoute","debugRoutes","debugRouteInfo","port","process","env","PORT","_isDebugEnv","SHOW_ROUTES","console","log","use","credentials","origin","extended","apiPrefix","API_PREFIX","push","req","res","next","err","locals","message","error","get","errorArr","name","stack","concat","errResponse","ErrorResponse","status","_server","listen","url","_router","forEach","middleware","route","handle","handler","temp","methods","method","path"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eAC6BA,OAAO,CAAC,aAAD,C;IAA5BC,I,YAAAA,I;IAAMC,U,YAAAA,U;;AACd,IAAMC,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA5B;;gBACmBA,OAAO,CAAC,QAAD,C;IAAlBI,M,aAAAA,M;;AACR,IAAMC,MAAM,GAAGL,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMO,SAAS,GAAGP,OAAO,CAAC,qBAAD,CAAP,CAA+BO,SAAjD;;AAEA,IAAMC,GAAG,GAAGT,OAAO,EAAnB;;AACA,IAAIU,WAAW,GAAGT,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIU,IAAI,GAAGV,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMW,IAAI,GAAGX,OAAO,CAAC,MAAD,CAAP,CAAgBY,MAAhB,CAAuBJ,GAAvB,CAAb,C,CACA;;;AACA,IAAMK,EAAE,GAAIC,MAAM,CAACC,OAAP,CAAeF,EAAf,GAAoBb,OAAO,CAAC,WAAD,CAAP,CAAqBW,IAArB,CAAhC;;AAEA,IAAIK,UAAJ;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,cAAc,GAAG,EAArB;AAEAd,MAAM;AAEN,IAAMe,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAAuC;;AACvC,IAAMC,WAAW,GAAGH,OAAO,CAACC,GAAR,CAAYG,WAAZ,KAA4B,MAAhD;;AACAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,IAA3B;AACAM,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,WAAlC;AAEAf,GAAG,CAACmB,GAAJ,CAAQjB,IAAI,CAAC;AAAEkB,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,MAAM,EAAE;AAA7B,CAAD,CAAZ;AACArB,GAAG,CAACmB,GAAJ,CAAQ1B,IAAI,EAAZ;AACAO,GAAG,CAACmB,GAAJ,CAAQzB,UAAU,CAAC;AAAE4B,EAAAA,QAAQ,EAAE;AAAZ,CAAD,CAAlB;AACAtB,GAAG,CAACmB,GAAJ,CAAQxB,YAAY,EAApB;AACAK,GAAG,CAACmB,GAAJ,CAAQtB,MAAM,EAAd,E,CAEA;AACA;;AACA,IAAI0B,SAAS,GAAGX,OAAO,CAACC,GAAR,CAAYW,UAAZ,IAA0B,EAA1C;AACAP,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,SAAzB;AACAb,cAAc,CAACe,IAAf,CAAoB,mBAApB,EAAyCF,SAAzC;AAEAvB,GAAG,CAACmB,GAAJ,CAAQ,MAAMI,SAAd,EAAyBzB,MAAzB;AAEAE,GAAG,CAACmB,GAAJ,CAAQ,UAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BA,EAAAA,IAAI,CAAC3B,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAD,GAAG,CAACmB,GAAJ,CAAQ,UAASU,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAAC1B,GAAJ,CAAQiC,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;AACA,MAAIK,QAAQ,GAAG,CACbL,GAAG,CAACM,IAAJ,GAAW,GAAX,GAAiBZ,SAAjB,IAA8B,SAAS,GAD1B,EAEbM,GAAG,CAACE,OAFS,EAGbF,GAAG,CAACO,KAHS,CAAf;;AAMA,MAAIrB,WAAJ,EAAiB;AACfmB,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgB3B,cAAhB,CAAX;AACD;;AAED,MAAI4B,WAAW,GAAG,IAAIvC,SAAS,CAACwC,aAAd,CAA4BL,QAA5B,CAAlB;AACAP,EAAAA,GAAG,CAACa,MAAJ,CAAWX,GAAG,CAACW,MAAJ,IAAc,GAAzB;AACAb,EAAAA,GAAG,CAAClC,IAAJ,CAAS6C,WAAT;AACD,CAjBD;;AAmBA,IAAI,OAAOf,SAAP,KAAqB,QAAzB,EAAmC;AACjCA,EAAAA,SAAS,GAAGA,SAAS,GAAG,GAAxB;AACD;;AAEDvB,GAAG,CAACyC,OAAJ,GAActC,IAAI,CAACuC,MAAL,CAAY/B,IAAZ,EAAkB,YAAM;AACpC,MAAMgC,GAAG,2CAAoChC,IAApC,cAA4CY,SAA5C,mCAAT;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AACD,CAHa,CAAd;;AAKA,IAAI;AACF3C,EAAAA,GAAG,CAAC4C,OAAJ,CAAYR,KAAZ,CAAkBS,OAAlB,CAA0B,UAASC,UAAT,EAAqB;AAC7C,QAAIA,UAAU,CAACC,KAAf,EAAsB;AACpB;AACAtC,MAAAA,WAAW,CAACgB,IAAZ,CAAiBqB,UAAU,CAACC,KAA5B;AACD,KAHD,MAGO,IAAID,UAAU,CAACX,IAAX,KAAoB,QAAxB,EAAkC;AACvC;AACAW,MAAAA,UAAU,CAACE,MAAX,CAAkBZ,KAAlB,CAAwBS,OAAxB,CAAgC,UAASI,OAAT,EAAkB;AAChDzC,QAAAA,UAAU,GAAGyC,OAAO,CAACF,KAArB;AACAvC,QAAAA,UAAU,IAAIC,WAAW,CAACgB,IAAZ,CAAiBjB,UAAjB,CAAd;AACD,OAHD;AAID;AACF,GAXD;;AAaAC,EAAAA,WAAW,CAACoC,OAAZ,CAAoB,UAASK,IAAT,EAAe;AACjC,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,MAAT,IAAmBF,IAAI,CAACC,OAAxB,EAAiC;AAC/BA,MAAAA,OAAO,IAAIC,MAAM,GAAG,IAApB;AACD;;AACD1C,IAAAA,cAAc,CAACe,IAAf,CAAoByB,IAAI,CAACG,IAAL,GAAY,IAAZ,GAAmBF,OAAvC;AACD,GAND;AAOD,CArBD,CAqBE,OAAOnB,KAAP,EAAc;AACdf,EAAAA,OAAO,CAACe,KAAR,CAAc,oCAAd,EAAoDA,KAApD;AACD;;AAED1B,MAAM,CAACC,OAAP,GAAiBP,GAAjB","sourcesContent":["const express = require(\"express\");\r\nconst { json, urlencoded } = require(\"body-parser\");\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst { config } = require(\"dotenv\");\r\nconst helmet = require(\"helmet\");\r\nconst routes = require(\"./routes\");\r\nconst Responses = require(\"newsfeed-web-models\").Responses;\r\n\r\nconst app = express();\r\nvar createError = require(\"http-errors\");\r\nvar cors = require(\"cors\");\r\nconst http = require(\"http\").Server(app);\r\n// eslint-disable-next-line no-unused-vars\r\nconst io = (module.exports.io = require(\"socket.io\")(http));\r\n\r\nvar debugRoute;\r\nvar debugRoutes = [];\r\nlet debugRouteInfo = [];\r\n\r\nconfig();\r\n\r\nconst port = process.env.PORT || 8080; // DO NOT REMOVE THIS LINE!!!\r\nconst _isDebugEnv = process.env.SHOW_ROUTES === \"true\";\r\nconsole.log(\"server port\", port);\r\nconsole.log(\"server _isDebugEnv\", _isDebugEnv);\r\n\r\napp.use(cors({ credentials: true, origin: true }));\r\napp.use(json());\r\napp.use(urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(helmet());\r\n\r\n// for use within IIS\r\n// app.use(\"/node-api/server.js/\", routes);\r\nlet apiPrefix = process.env.API_PREFIX || \"\";\r\nconsole.log(\"apiPrefix\", apiPrefix);\r\ndebugRouteInfo.push(\"server apiPrefix:\", apiPrefix);\r\n\r\napp.use(\"/\" + apiPrefix, routes);\r\n\r\napp.use((req, res, next) => {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n  let errorArr = [\r\n    err.name + \"[\" + apiPrefix || \"null\" + \"]\",\r\n    err.message,\r\n    err.stack\r\n  ];\r\n\r\n  if (_isDebugEnv) {\r\n    errorArr = errorArr.concat(debugRouteInfo);\r\n  }\r\n\r\n  let errResponse = new Responses.ErrorResponse(errorArr);\r\n  res.status(err.status || 500);\r\n  res.json(errResponse);\r\n});\r\n\r\nif (typeof apiPrefix === \"string\") {\r\n  apiPrefix = apiPrefix + \"/\";\r\n}\r\n\r\napp._server = http.listen(port, () => {\r\n  const url = `listening on http://localhost:${port}/${apiPrefix}api/ping  {click here to ping}`;\r\n  console.log(url);\r\n});\r\n\r\ntry {\r\n  app._router.stack.forEach(function(middleware) {\r\n    if (middleware.route) {\r\n      // routes registered directly on the app\r\n      debugRoutes.push(middleware.route);\r\n    } else if (middleware.name === \"router\") {\r\n      // router middleware\r\n      middleware.handle.stack.forEach(function(handler) {\r\n        debugRoute = handler.route;\r\n        debugRoute && debugRoutes.push(debugRoute);\r\n      });\r\n    }\r\n  });\r\n\r\n  debugRoutes.forEach(function(temp) {\r\n    var methods = \"\";\r\n    for (var method in temp.methods) {\r\n      methods += method + \", \";\r\n    }\r\n    debugRouteInfo.push(temp.path + \": \" + methods);\r\n  });\r\n} catch (error) {\r\n  console.error(\"Error with debug routes extraction\", error);\r\n}\r\n\r\nmodule.exports = app;\r\n"],"file":"server.js"}