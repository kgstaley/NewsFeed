{"version":3,"sources":["../app/server.js"],"names":["express","require","routes","json","urlencoded","config","helmet","Responses","app","createError","cors","http","Server","use","credentials","origin","extended","apiPrefix","process","env","API_PREFIX","req","res","next","err","locals","message","error","get","errorArr","name","stack","errResponse","ErrorResponse","status","port","_server","listen","url","console","log","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEE,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAuBH,OAAO,CAAC,aAAD,CAApC;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAaJ,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMM,SAAS,GAAGN,OAAO,CAAC,wDAAD,CAAP,CACfM,SADH;;AAGA,MAAMC,GAAG,GAAGR,OAAO,EAAnB;;AAEA,IAAIS,WAAW,GAAGR,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIS,IAAI,GAAGT,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAMU,IAAI,GAAGV,OAAO,CAAC,MAAD,CAAP,CAAgBW,MAAhB,CAAuBJ,GAAvB,CAAb;;AAEAH,MAAM;AAENG,GAAG,CAACK,GAAJ,CAAQH,IAAI,CAAC;AAAEI,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,MAAM,EAAE;AAA7B,CAAD,CAAZ;AACAP,GAAG,CAACK,GAAJ,CAAQV,IAAI,EAAZ;AACAK,GAAG,CAACK,GAAJ,CAAQT,UAAU,CAAC;AAAEY,EAAAA,QAAQ,EAAE;AAAZ,CAAD,CAAlB;AACAR,GAAG,CAACK,GAAJ,CAAQP,MAAM,EAAd;AAEA,IAAIW,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAZ,IAA0B,EAA1C;AAEAZ,GAAG,CAACK,GAAJ,CAAQ,MAAMI,SAAd,EAAyBf,MAAzB;AAEAM,GAAG,CAACK,GAAJ,CAAQ,CAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1BA,EAAAA,IAAI,CAACd,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD;AAIAD,GAAG,CAACK,GAAJ,CAAQ,UAASW,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpCD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACb,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;AACA,MAAIK,QAAQ,GAAG,CACbL,GAAG,CAACM,IAAJ,GAAW,GAAX,GAAiBb,SAAjB,IAA8B,SAAS,GAD1B,EAEbO,GAAG,CAACE,OAFS,EAGbF,GAAG,CAACO,KAHS,CAAf;AAMA,MAAIC,WAAW,GAAG,IAAIzB,SAAS,CAAC0B,aAAd,CAA4BJ,QAA5B,CAAlB;AACAP,EAAAA,GAAG,CAACY,MAAJ,CAAWV,GAAG,CAACU,MAAJ,IAAc,GAAzB;AACAZ,EAAAA,GAAG,CAACnB,IAAJ,CAAS6B,WAAT;AACD,CAZD;;AAcA,IAAI,OAAOf,SAAP,KAAqB,QAAzB,EAAmC;AACjCA,EAAAA,SAAS,GAAGA,SAAS,GAAG,GAAxB;AACD;;AAED,MAAMkB,IAAI,GAAG,IAAb;AACA3B,GAAG,CAAC4B,OAAJ,GAAczB,IAAI,CAAC0B,MAAL,CAAYF,IAAZ,EAAkB,MAAM;AACpC,QAAMG,GAAG,GAAI,gCAA+BH,IAAK,IAAGlB,SAAU,UAA9D;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,CAHa,CAAd;AAKAG,MAAM,CAACC,OAAP,GAAiBlC,GAAjB","sourcesContent":["const express = require(\"express\");\r\nconst routes = require(\"./routes\");\r\nconst { json, urlencoded } = require(\"body-parser\");\r\nconst { config } = require(\"dotenv\");\r\nconst helmet = require(\"helmet\");\r\nconst Responses = require(\"../newsfeed-modules/newsfeed-web-models/src/responses/\")\r\n  .Responses;\r\n\r\nconst app = express();\r\n\r\nvar createError = require(\"http-errors\");\r\nvar cors = require(\"cors\");\r\nconst http = require(\"http\").Server(app);\r\n\r\nconfig();\r\n\r\napp.use(cors({ credentials: true, origin: true }));\r\napp.use(json());\r\napp.use(urlencoded({ extended: false }));\r\napp.use(helmet());\r\n\r\nlet apiPrefix = process.env.API_PREFIX || \"\";\r\n\r\napp.use(\"/\" + apiPrefix, routes);\r\n\r\napp.use((req, res, next) => {\r\n  next(createError(404));\r\n});\r\n\r\napp.use(function(err, req, res, next) {\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n  let errorArr = [\r\n    err.name + \"[\" + apiPrefix || \"null\" + \"]\",\r\n    err.message,\r\n    err.stack\r\n  ];\r\n\r\n  let errResponse = new Responses.ErrorResponse(errorArr);\r\n  res.status(err.status || 500);\r\n  res.json(errResponse);\r\n});\r\n\r\nif (typeof apiPrefix === \"string\") {\r\n  apiPrefix = apiPrefix + \"/\";\r\n}\r\n\r\nconst port = 8080;\r\napp._server = http.listen(port, () => {\r\n  const url = `listening on http://localhost${port}/${apiPrefix}api/ping`;\r\n  console.log(url);\r\n});\r\n\r\nmodule.exports = app;\r\n"],"file":"server.js"}